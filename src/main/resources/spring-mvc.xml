<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    
    <description>Spring MVC Configuration</description>
    
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:wyjt.properties" />
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="com.jxf" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
    

	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
		    <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
		      <property name="supportedMediaTypes" value="application/json"/>
		      <property name="features">
		        <list>
		          <value>WriteMapNullValue</value>
		          <value>WriteNullStringAsEmpty</value>
		          <value>WriteNullListAsEmpty</value>
		          <value>WriteDateUseDateFormat</value>
		          <value>WriteNullNumberAsZero</value>
		        </list>
		      </property>
		    </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
	
	<!-- 定义视图文件解析 -->

	<bean id="viewResolver"  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="prefix" value="${web.view.prefix}"/>
		<property name="suffix" value="${web.view.suffix}"/>
		<property name="redirectHttp10Compatible" value="false" />
		<property name="order" value="0"/>		
	</bean>
	
	<!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	
	<!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
	
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/home/index"/>
	
	<!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
	<mvc:interceptors>
		<mvc:interceptor>
		    <mvc:mapping path="/**" />
			<bean class="com.jxf.web.interceptor.AuthorityIPInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
		    <mvc:mapping path="/**" />
			<bean class="com.jxf.web.interceptor.AccessInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="${adminPath}/**" />
			<mvc:exclude-mapping path="${adminPath}/"/>
			<mvc:exclude-mapping path="${adminPath}/login"/>
			<mvc:exclude-mapping path="${adminPath}/sys/menu/tree"/>
			<mvc:exclude-mapping path="${adminPath}/sys/menu/treeData"/>
			<bean class="com.jxf.web.admin.sys.LogInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
		    <mvc:mapping path="${wyjtMinipro}/member/**" />
			<mvc:mapping path="${wyjtMinipro}/loan/**" />
			<mvc:exclude-mapping path="${wyjtMinipro}/member/recharge/fynotify"/>
			<bean class="com.jxf.web.minipro.interceptor.WxUserInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
		    <mvc:mapping path="${wyjtApp}/member/**" />
		    <mvc:mapping path="${wyjtApp}/memberAct/**" />
		    <mvc:mapping path="${wyjtApp}/friend/**" />
			<mvc:mapping path="${wyjtApp}/loan/**" />
			<mvc:mapping path="${wyjtApp}/card/**" />
			<mvc:mapping path="${wyjtApp}/message/**" />
			<mvc:mapping path="${wyjtApp}/polling/**" />
			<mvc:mapping path="${wyjtApp}/arbitration/**" />
			<mvc:mapping path="${wyjtApp}/arbitrationExecution/**" />
			<mvc:mapping path="${wyjtApp}/collection/**" />
			<mvc:mapping path="${wyjtApp}/smarket/**" />
			<mvc:mapping path="${wyjtApp}/auction/**" />
			<mvc:mapping path="${wyjtApp}/ca/**" />
			<mvc:mapping path="${wyjtApp}/common/question" />
			<mvc:exclude-mapping path="${wyjtApp}/member/videoVerify/notify"/>
			<mvc:exclude-mapping path="${wyjtApp}/member/videoVerify/newNotify"/>
			<mvc:exclude-mapping path="${wyjtApp}/member/collectionRecordDetail"/>
			<mvc:exclude-mapping path="${wyjtApp}/member/arbitrationRecordDetail"/>
			<mvc:exclude-mapping path="${wyjtApp}/member/returnUrl"/>
			<mvc:exclude-mapping path="${wyjtApp}/ca/shareCaReport"/>
			<mvc:exclude-mapping path="${wyjtApp}/ca/gjjShareDetail"/>
			<mvc:exclude-mapping path="${wyjtApp}/ca/shebaoShareDetail"/>
			<mvc:exclude-mapping path="${wyjtApp}/ca/yysShareBillDetail"/>
			<mvc:exclude-mapping path="${wyjtApp}/ca/yysShareCallDetail"/>
			<bean class="com.jxf.web.app.interceptor.WyjtAppInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
		    <mvc:mapping path="${gxtH5}/member/**" />
		    <mvc:mapping path="${gxtH5}/memberAct/**" />
			<mvc:mapping path="${gxtH5}/loan/**" />
			<mvc:mapping path="${gxtH5}/card/**" />
			<mvc:mapping path="${gxtH5}/message/**" />
			<mvc:mapping path="${gxtH5}/polling/**" />
			<mvc:mapping path="${gxtH5}/arbitration/**" />
			<mvc:mapping path="${gxtH5}/execution/**" />
			<mvc:exclude-mapping path="${gxtH5}/member/videoVerify/notify"/>
			<mvc:exclude-mapping path="${gxtH5}/loan/loanDetailForGxt"/>
			<bean class="com.jxf.web.h5.gxt.interceptor.GxtH5Interceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="${wyjtWx}/loanee/**" />
			<bean class="com.jxf.web.wx.interceptor.WyjtWxInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/home/member/**" />
			<bean class="com.jxf.web.home.WyjtHomeInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	
	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
			</property>
	</bean>
	<!-- 支持Shiro对Controller的方法级AOP安全控制 end -->
	
	<!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="maxUploadSize" value="${web.maxUploadSize}" />  
	</bean>
	
</beans>