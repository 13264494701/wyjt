<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxf.loan.dao.NfsLoanContractDao">
    
	<sql id="nfsLoanContractColumns">
		a.id AS "id",
		a.loan_id AS "loanId",
		a.contract_url AS "contractUrl",
		a.signature_type AS "signatureType",
		a.signature_no AS "signatureNo",
		a.signature_url AS "signatureUrl",
		a.status AS "status",
		a.create_by AS "createBy.empNo",
		a.create_time AS "createTime",
		a.update_by AS "updateBy.empNo",
		a.update_time AS "updateTime",
		a.del_flag AS "delFlag"
	</sql>
	
	<resultMap type="NfsLoanContract" id="nfsLoanContractResultMap">		
        <id column="id" property="id"/>
         <result column="status" property="status" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
        <result column="signatureType" property="signatureType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
	</resultMap>
	
	<sql id="nfsLoanContractJoins">
	</sql>
    
	<select id="get" resultMap="nfsLoanContractResultMap">
		SELECT 
			<include refid="nfsLoanContractColumns"/>
		FROM NFS_LOAN_CONTRACT a
		<include refid="nfsLoanContractJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getContractByLoanId" resultMap="nfsLoanContractResultMap">
		SELECT 
			<include refid="nfsLoanContractColumns"/>
		FROM NFS_LOAN_CONTRACT a
		<include refid="nfsLoanContractJoins"/>
		WHERE a.loan_id = #{loanId}
		AND	a.del_flag = 0
		ORDER BY a.id DESC 
	</select>
	
	<select id="getCurrentContractByLoanId" resultMap="nfsLoanContractResultMap">
		SELECT 
			<include refid="nfsLoanContractColumns"/>
		FROM NFS_LOAN_CONTRACT a
		<include refid="nfsLoanContractJoins"/>
		WHERE a.loan_id = #{loanId}
		AND	a.del_flag = 0
		ORDER BY a.id DESC
		LIMIT 1
	</select>
	
	<select id="findList" resultMap="nfsLoanContractResultMap">
		SELECT 
			<include refid="nfsLoanContractColumns"/>
		FROM NFS_LOAN_CONTRACT a
		<include refid="nfsLoanContractJoins"/>
		<where>
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="loanId != null and loanId != ''">
				AND a.loan_id = #{loanId}
			</if>
			<if test="signatureType != null">
				AND a.signature_type = #{signatureType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="status != null">
				AND a.status = #{status,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			    ORDER BY a.id DESC
			</otherwise>
		</choose>
		<if test="count != null ">
		LIMIT #{count}
		</if>
	</select>
	
	
	<insert id="insert" parameterType="NfsLoanContract">
		INSERT INTO NFS_LOAN_CONTRACT(
			id,
			loan_id,
			contract_url,
			signature_type,
			signature_no,
			signature_url,
			status,
			create_by,
			create_time,
			update_by,
			update_time,
			del_flag
		) VALUES (
			#{id},
			#{loanId},
			#{contractUrl},
			#{signatureType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			#{signatureNo},
			#{signatureUrl},
			#{status,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			#{createBy.empNo},
			#{createTime},
			#{updateBy.empNo},
			#{updateTime},
			#{delFlag}
		)
	</insert>
	
	<update id="update" parameterType="NfsLoanContract">
		UPDATE NFS_LOAN_CONTRACT SET 	
			loan_id = #{loanId},
			contract_url = #{contractUrl},
			signature_type = #{signatureType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			signature_no = #{signatureNo},
			signature_url = #{signatureUrl},
			status = #{status,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			create_time = #{createTime},
			update_by = #{updateBy.empNo},
			update_time = #{updateTime}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE NFS_LOAN_CONTRACT SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>