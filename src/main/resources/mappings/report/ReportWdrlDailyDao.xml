<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxf.report.dao.ReportWdrlDailyDao">
    
	<sql id="reportWdrlDailyColumns">
		a.id AS "id",
		a.date AS "date",
		a.online_quantity AS "onlineQuantity",
		a.online_amount AS "onlineAmount",
		a.offline_quantity AS "offlineQuantity",
		a.offline_amount AS "offlineAmount",
		a.create_by AS "createBy.empNo",
		a.create_time AS "createTime",
		a.update_by AS "updateBy.empNo",
		a.update_time AS "updateTime",
		a.del_flag AS "delFlag"
	</sql>
	
	<resultMap type="ReportWdrlDaily" id="reportWdrlDailyResultMap">		
        <id column="id" property="id"/>
	</resultMap>
	
	<sql id="reportWdrlDailyJoins">
	</sql>
    
	<select id="get" resultMap="reportWdrlDailyResultMap">
		SELECT 
			<include refid="reportWdrlDailyColumns"/>
		FROM REPORT_WDRL_DAILY a
		<include refid="reportWdrlDailyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultMap="reportWdrlDailyResultMap">
		SELECT 
			a.id AS "id",
			left(a.date,#{type}) AS "date",
		    sum(a.online_quantity) AS "onlineQuantity",
		    sum(a.online_amount) AS "onlineAmount",
		    sum(a.offline_quantity) AS "offlineQuantity",
		    sum(a.offline_amount) AS "offlineAmount",
			a.create_by AS "createBy.empNo",
		    a.create_time AS "createTime",
		    a.update_by AS "updateBy.empNo",
		    a.update_time AS "updateTime",
		    a.del_flag AS "delFlag"
		FROM REPORT_WDRL_DAILY a
		<include refid="reportWdrlDailyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="date != null and date != ''">
				AND a.date = #{date}
			</if>
		</where>
		GROUP BY left(a.date,#{type})
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			    ORDER BY a.date DESC
			</otherwise>
		</choose>
	</select>
	
	
	<insert id="insert" parameterType="ReportWdrlDaily">
		INSERT INTO REPORT_WDRL_DAILY(
			id,
			date,
			online_quantity,
			online_amount,
			offline_quantity,
			offline_amount,
			create_by,
			create_time,
			update_by,
			update_time,
			del_flag
		) VALUES (
			#{id},
			#{date},
			#{onlineQuantity},
			#{onlineAmount},
			#{offlineQuantity},
			#{offlineAmount},
			#{createBy.empNo},
			#{createTime},
			#{updateBy.empNo},
			#{updateTime},
			#{delFlag}
		)
	</insert>
	
	<update id="update" parameterType="ReportWdrlDaily">
		UPDATE REPORT_WDRL_DAILY SET 	
			date = #{date},
			online_quantity = #{onlineQuantity},
			online_amount = #{onlineAmount},
			offline_quantity = #{offlineQuantity},
			offline_amount = #{offlineAmount},
			create_time = #{createTime},
			update_by = #{updateBy.empNo},
			update_time = #{updateTime}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE REPORT_WDRL_DAILY SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="deleteByDate">
		UPDATE REPORT_WDRL_DAILY SET
			del_flag = 1
		WHERE date = #{date}
	</update>
	
	<select id="wdrlCount" resultType="ReportWdrlDaily">
		SELECT
			date_sub( curdate( ), INTERVAL #{daysAgo} DAY ) AS date,
			( SELECT count( id ) FROM NFS_WDRL_RECORD WHERE status = 6 AND to_days( now( ) ) - to_days( pay_time ) = #{daysAgo} ) AS onlineQuantity,
			( SELECT ifnull(sum( pay_amount ),0) FROM NFS_WDRL_RECORD WHERE status = 6 AND to_days( now( ) ) - to_days( pay_time ) = #{daysAgo} ) AS onlineAmount,
            ( SELECT count( id ) FROM MEM_MEMBER_ACT_TRX WHERE trx_code = 'MB050' AND to_days( now( ) ) - to_days( create_time ) = #{daysAgo} ) AS offlineQuantity,
            ( SELECT ifnull(sum( trx_amt ),0) FROM MEM_MEMBER_ACT_TRX WHERE trx_code = 'MB050' AND to_days( now( ) ) - to_days( create_time ) = #{daysAgo} ) AS offlineAmount
		FROM
			MEM_MEMBER_ACT_TRX
		LIMIT 1
	</select>
	
</mapper>