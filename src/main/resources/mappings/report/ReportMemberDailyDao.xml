<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxf.report.dao.ReportMemberDailyDao">
    
	<sql id="reportMemberDailyColumns">
		a.id AS "id",
		a.date AS "date",
		a.new_members AS "newMembers",
		a.new_identity_members AS "newIdentityMembers",
		a.total_members AS "totalMembers",
		a.total_identity_members AS "totalIdentityMembers",
		a.active_members AS "activeMembers",
		a.create_by AS "createBy.empNo",
		a.create_time AS "createTime",
		a.update_by AS "updateBy.empNo",
		a.update_time AS "updateTime",
		a.del_flag AS "delFlag"
	</sql>
	
	<resultMap type="ReportMemberDaily" id="reportMemberDailyResultMap">		
        <id column="id" property="id"/>
	</resultMap>
	
	<sql id="reportMemberDailyJoins">
	</sql>

	<select id="get" resultMap="reportMemberDailyResultMap">
		SELECT 
			<include refid="reportMemberDailyColumns"/>
		FROM REPORT_MEMBER_DAILY a
		<include refid="reportMemberDailyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultMap="reportMemberDailyResultMap">
		SELECT
		id AS "id",
		left(date,#{type}) AS "date",
		sum(new_members) AS "newMembers",
		sum(new_identity_members) AS "newIdentityMembers",
		max(total_members) AS "totalMembers",
		max(total_identity_members) AS "totalIdentityMembers",
		sum(active_members) AS "activeMembers",
		create_by AS "createBy.empNo",
		create_time AS "createTime",
		update_by AS "updateBy.empNo",
		update_time AS "updateTime",
		del_flag AS "delFlag"
		FROM REPORT_MEMBER_DAILY
		<include refid="reportMemberDailyJoins"/>
		<where>
			del_flag = #{DEL_FLAG_NORMAL}
			<if test="date != null and date != ''">
				AND date = #{date}
			</if>
		</where>
		GROUP BY left(date,#{type})
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert" parameterType="ReportMemberDaily">
		INSERT INTO REPORT_MEMBER_DAILY(
			id,
			date,
			new_members,
			new_identity_members,
			total_members,
			total_identity_members,
			active_members,
			create_by,
			create_time,
			update_by,
			update_time,
			del_flag
		) VALUES (
			#{id},
			#{date},
			#{newMembers},
			#{newIdentityMembers},
			#{totalMembers},
			#{totalIdentityMembers},
			#{activeMembers},
			#{createBy.empNo},
			#{createTime},
			#{updateBy.empNo},
			#{updateTime},
			#{delFlag}
		)
	</insert>
	
	<update id="update" parameterType="ReportMemberDaily">
		UPDATE REPORT_MEMBER_DAILY SET 	
			update_by = #{updateBy.empNo},
			update_time = #{updateTime}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE REPORT_MEMBER_DAILY SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="deleteByDate">
		UPDATE REPORT_MEMBER_DAILY SET
			del_flag = 1
		WHERE date = #{date}
	</update>
	
	<select id="memberCount" resultType="ReportMemberDaily">
		SELECT
			date_sub( curdate( ), INTERVAL #{daysAgo} DAY ) AS date,
			count( id ) AS newMembers,
			0 AS newIdentityMembers,
			( SELECT count( id ) FROM MEM_MEMBER WHERE to_days( now( ) ) - to_days( create_time ) > #{daysAgo} - 1 ) AS totalMembers,
			( SELECT count( id ) FROM MEM_MEMBER WHERE id_no is not null AND to_days( now( ) ) - to_days( create_time ) > #{daysAgo} - 1 ) AS totalIdentityMembers
		FROM
			MEM_MEMBER
		WHERE
			to_days( now( ) ) - to_days( create_time ) = #{daysAgo}
	</select>
</mapper>